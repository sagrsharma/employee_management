{"version":3,"sources":["components/AddEmployee.js","components/AddProject.js","components/EmployeeList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","AddEmployee","employeeList","setEmployeeList","projectList","classes","useState","modalIsOpen","setIsOpen","name","setName","email","setEmail","mobileNumber","setMobileNumber","project","setProject","closeModal","Grid","container","style","marginTop","item","sm","Button","variant","color","onClick","Dialog","onClose","open","autoComplete","onSubmit","e","preventDefault","employee","id","Math","floor","random","projectTitle","localStorage","setItem","JSON","stringify","DialogTitle","cursor","float","DialogContent","dividers","textAlign","FormControl","className","TextField","label","placeholder","value","onChange","target","size","error","required","type","InputLabel","Select","width","height","labelId","MenuItem","map","title","DialogActions","justifyContent","Modal","setAppElement","AddProject","setProjectList","projectValue","setProjectValue","length","push","table","EmployeeList","background","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","index","scope","initialState","initialProjectList","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4f2cb95.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  makeStyles,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n  },\n}));\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement(\"*\");\n\nexport default function AddEmployee({\n  employeeList,\n  setEmployeeList,\n  projectList,\n}) {\n  const classes = useStyles();\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [project, setProject] = useState(\"\");\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function onSelect(e) {\n    setProject(e.target.value);\n  }\n\n  function reset() {\n    setName(\"\");\n    setEmail(\"\");\n    setMobileNumber(\"\");\n    setProject(\"\");\n  }\n  function closeModal() {\n    setIsOpen(false);\n    setName(\"\");\n    setEmail(\"\");\n    setMobileNumber(\"\");\n    setProject(\"\");\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let id = Math.floor(Math.random() * 100);\n    const employee = {\n      id,\n      name,\n      email,\n      mobileNumber,\n      projectTitle: project,\n    };\n    localStorage.setItem(\"employeeDetail\", JSON.stringify(employee));\n    setEmployeeList([...employeeList, employee]);\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Grid container style={{ marginTop: \"1em\" }}>\n        <Grid item sm={10}></Grid>\n        <Grid item sm={2}>\n          <Button variant=\"contained\" color=\"primary\" onClick={openModal}>\n            Add Employee\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        onClose={closeModal}\n        aria-labelledby=\"customized-dialog-title\"\n        open={modalIsOpen}\n      >\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <DialogTitle id=\"customized-dialog-title\" onClose={closeModal}>\n            Add Employee\n            <span\n              onClick={closeModal}\n              style={{ cursor: \"pointer\", float: \"right\" }}\n            >\n              X\n            </span>\n          </DialogTitle>\n          <DialogContent dividers style={{ textAlign: \"center\" }}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                size=\"small\"\n                error={!name}\n                id=\"outlined-error\"\n                required\n              />\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                size=\"small\"\n                error={!email}\n                id=\"outlined-error\"\n                required\n              />\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Mobile\"\n                placeholder=\"Enter Mobile\"\n                value={mobileNumber}\n                type=\"number\"\n                onChange={(e) => setMobileNumber(e.target.value)}\n                size=\"small\"\n                id=\"outlined-error\"\n                error={!mobileNumber}\n                required\n              />\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel\n                id=\"demo-simple-select-error-label\"\n                style={{ marginTop: \"-8px\" }}\n              >\n                Projects *\n              </InputLabel>\n              <Select\n                error={!project}\n                style={{ width: \"230px\", height: \"40px\" }}\n                id=\"demo-simple-select-error\"\n                labelId=\"demo-simple-select-error-label\"\n                value={project}\n                onChange={onSelect}\n                label=\"Projects\"\n                required\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {projectList.map((project) => (\n                  <MenuItem key={project.id} value={project.title}>\n                    {project.title}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogActions style={{ justifyContent: \"center\" }}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <Button variant=\"outlined\" color=\"secondary\" onClick={reset}>\n                Reset\n              </Button>\n            </FormControl>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport {\n  TextField,\n  Button,\n  Grid,\n  FormControl,\n  makeStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement(\"*\");\n\nexport default function AddProject({ setProjectList, projectList }) {\n  const classes = useStyles();\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [projectValue, setProjectValue] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  function onSelectProject(e) {\n    setProjectValue(e.target.value);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n    setProjectValue(\"\");\n  }\n  function reset() {\n    setProjectValue(\"\");\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let id = Math.floor(Math.random() * 100);\n    const project = {\n      id: projectList.length + 1,\n      title: projectValue,\n    };\n    localStorage.setItem(\"projectDetails\", JSON.stringify(project));\n    projectList.push(project);\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item sm={10}></Grid>\n        <Grid item sm={2}>\n          <Button variant=\"contained\" color=\"primary\" onClick={openModal}>\n            Add Project\n          </Button>\n        </Grid>\n      </Grid>\n      <Dialog\n        onClose={closeModal}\n        aria-labelledby=\"customized-dialog-title\"\n        open={modalIsOpen}\n      >\n        <form\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n          className=\"add-employee__form\"\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={closeModal}>\n            Modal title\n            <span\n              onClick={closeModal}\n              style={{ cursor: \"pointer\", float: \"right\" }}\n            >\n              X\n            </span>\n          </DialogTitle>\n          <DialogContent dividers>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <TextField\n                error={!projectValue}\n                id=\"outlined-error\"\n                variant=\"outlined\"\n                label=\"Projects\"\n                placeholder=\"Enter Project\"\n                value={projectValue}\n                onChange={onSelectProject}\n                required\n              />\n            </FormControl>\n          </DialogContent>\n          <DialogActions style={{ justifyContent: \"center\" }}>\n            <FormControl>\n              <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={reset}\n                type=\"reset\"\n              >\n                Reset\n              </Button>\n            </FormControl>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"90%\",\n    margin: \"0px 4em 0px 4em\",\n  },\n});\n\nexport default function EmployeeList({ employeeList }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <h2 style={{ background: \"#0f1228\", color: \"#e7e9e7\" }}>Employee List</h2>\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Series</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Project</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {employeeList.map((row, index) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.email}</TableCell>\n                <TableCell align=\"right\">{row.mobileNumber}</TableCell>\n                <TableCell align=\"right\">{row.projectTitle}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport AddEmployee from \"./components/AddEmployee\";\nimport AddProject from \"./components/AddProject\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport \"./styles.css\";\n\nconst initialState = [\n  {\n    id: 1,\n    name: \"Jogn\",\n    email: \"email@example.com\",\n    mobileNumber: \"98787\",\n    projectTitle: \"Project 1\",\n  },\n  {\n    id: 2,\n    name: \"Josfdgn\",\n    email: \"emaiasdfl@example.com\",\n    mobileNumber: \"95498787\",\n    projectTitle: \"Project 2\",\n  },\n  {\n    id: 3,\n    name: \"Jogasfdn\",\n    email: \"eadsfmail@example.com\",\n    mobileNumber: \"0090998787\",\n    projectTitle: \"Project 3\",\n  },\n];\n\nconst initialProjectList = [\n  { id: 1, title: \"Project 1\" },\n  { id: 2, title: \"Project 2\" },\n  { id: 3, title: \"Project 3\" },\n];\n\nexport default function App() {\n  const [employeeList, setEmployeeList] = useState(initialState);\n  const [projectList, setProjectList] = useState(initialProjectList);\n\n  return (\n    <div className=\"App\">\n      <AddProject setProjectList={setProjectList} projectList={projectList} />\n      <AddEmployee\n        employeeList={employeeList}\n        setEmployeeList={setEmployeeList}\n        projectList={projectList}\n      />\n      <EmployeeList employeeList={employeeList} />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}